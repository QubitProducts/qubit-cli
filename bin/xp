#!/usr/bin/env node
const program = require('commander')
const path = require('path')
const exec = require('child_process').exec
const pkg = require('../package.json')
const scaffold = require('../src/cmd/scaffold')
const serve = require('../src/cmd/serve')
const up = require('../src/cmd/up')
const down = require('../src/cmd/down')

program
  .command('open')
  .description('open xp folder in finder, e.g. to locate chrome-extension')
  .action(() => exec(`open ${path.dirname(__dirname)}`))

program
  .command('scaffold <template>')
  .description('scaffold a project from a template')
  .action(scaffold)

program
  .command('up')
  .description('push experience to remote')
  .action(up)

program
  .command('down')
  .description('pull experience from remote')
  .action(down)

program
  .version(pkg.version)
  .arguments('<variation>')
  .option('-p, --port [port]', 'use custom [port]', Number, 41337)
  .option('-r, --require', 'wait for window.__qubit.amd')
  .option('-w, --watch', 'watch for changes and live reload')
  .option('-s, --sync', 'watch for changes and sync with remote')
  .action(serve)

program.parse(process.argv)

if (!program.args.length) serve('', program)
