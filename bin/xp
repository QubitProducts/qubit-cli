#!/usr/bin/env node
const program = require('commander')
const path = require('path')
const exec = require('child_process').exec
const pkg = require('../package.json')
const scaffold = require('../src/cmd/scaffold')
const serve = require('../src/cmd/serve')
const up = require('../src/cmd/up')
const down = require('../src/cmd/down')
const connect = require('../src/cmd/connect')

program
  .command('up')
  .description('push experience up to remote')
  .action(up)

program
  .command('down')
  .description('pull experience down from remote')
  .action(down)

program
  .command('connect')
  .description('pull down experiences that you are editing in the platform')
  .action(connect)

program
  .command('scaffold <template>')
  .description('scaffold a project from a template')
  .action(scaffold)

program
  .command('open')
  .description('open xp folder in finder, e.g. to locate chrome-extension')
  .action(() => exec(`open ${path.dirname(__dirname)}`))

program
  .usage(
`[varaition.js] [options]
         xp <cmd> [options]`
  )
  .version(pkg.version)
  .arguments('<variation>')
  .option('-p, --port [port]', 'use custom [port]', Number, 41337)
  .option('-w, --watch', 'watch for changes and live reload')
  .option('-s, --sync', 'watch for changes and sync with remote')
  .action(serve)

program.on('--help', function () {
  console.log(`
  Examples:

    $ xp --help
    $ xp scaffold example
    $ xp variation.js --watch
    $ xp variation.js --sync
    $ xp up
    $ xp down
    $ xp connect
  `)
})

program.parse(process.argv)
