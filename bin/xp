#!/usr/bin/env node
require('async-to-gen/register')
const path = require('path')
process.env.NODE_CONFIG_DIR = path.resolve(__dirname, '../config')
const program = require('commander')
const pkg = require('../package.json')
const exec = require('child_process').exec
const log = require('../src/lib/log')
const pull = require('../src/cmd/pull')
const serve = require('../src/cmd/serve')
const push = require('../src/cmd/push')
const create = require('../src/cmd/create')
const previewLink = require('../src/cmd/preview-link')
const login = require('../src/cmd/login')

program
  .command('login')
  .description('login to the platform')
  .action(login)

program
  .command('create <propertyId>')
  .description('create an experience')
  .action(create)

program
  .command('push')
  .description('push experience up to remote')
  .action(push)

program
  .command('pull')
  .usage(`
         xp pull // pull from remote
         xp pull example // pull from template
         xp pull propertyId experienceId // pull from experience
  `)
  .description('pull experience from template, remote or experience editor')
  .action(pull)

program
  .command('open')
  .description('open xp folder in finder, e.g. to locate chrome-extension')
  .action(() => exec(`open ${path.dirname(__dirname)}`))

program
  .command('preview-link')
  .description('log sharable preview links for your variations')
  .action(() => previewLink().then((links) => links.map((link) => log(link))), log.error)

program
  .usage(`[variation.js] [options]
         xp <cmd> [options]`)
  .version(pkg.version)
  .arguments('<variation>')
  .option('-w, --watch', 'watch for changes and live reload')
  .option('-s, --sync', 'watch for changes and sync with remote')
  .option('-v, --verbose', 'log verbose output', false)
  .action(serve)

program.on('--help', function () {
  console.log(`
  Examples:

    $ xp --help

    $ xp login

    $ xp pull
    $ xp pull 2499 1234
    $ xp pull https://app.qubit.com/p/2499/experiences/84069/editor
    $ xp pull example

    $ xp create

    $ xp variation.js --watch
    $ xp variation.js --sync

    $ xp push
  `)
})

program.parse(process.argv)
